
      
      
      
    [{"authors":null,"categories":null,"content":"Table of Contents [[#Introduction]] [[#What is CI/CD?]] [[#Preparing your Obsidian Vault]] [[#Setting up the Quartz Static Site]] [[#Creating the CI/CD Workflow]] [[#Quartz Deploy Workflow]] [[#Setting up a PAT \u0026amp; Secrets Management]] [[#Push Quartz Content Workflow]] [[#Optional Maintaining Multiple Sites from within a Single Vault]] [[#Conclusion]] Introduction For a few years now I’ve run my life in Obsidian. Everything - including research, project management, TTRPG notes, and this post you’re reading now - lives in my personal Obsidian vault. I recently refactored this “second brain” of mine and begin sharing my notes online as an exercise in “learning in public”.\nThere’s a number of tools for sharing your markdown notes online, including Obsidian’s own great publish service. However, given my own enthusiasm for DIY approaches I decided it’d be better (and more fun) to host my own solution: enter Quartz, a fast and easy to use static site generator purpose built for publishing markdown notes that I could host on GitHub Pages for free.\nSetting up Quartz is a straight forward task; however, the process of manually copying the markdown notes from my vault, building, then deploying the website on a regular basis introduced a lot of friction that got in the way of the work I’d rather be doing. My goal: automate getting notes from my vault to a live site with a single Git push so I could easily backup my notes and publish my updated website with a single command.\nIn this post, I’ll walk you through the steps of how you can easily set up a fully automated notes-to-published-website pipeline using GitHub Actions. This simple tutorial will assume you already have some notes in Obsidian you’d like to publish, and that you have a basic understanding of Git - enough to create a repository, make commits, and push to GitHub.\nRather than configuring Quartz entirely from scratch, I provide a template repository so you can get started fast. For a detailed overview of setting up and customizing Quartz from scratch, check out the official documentation.\nBy following this process, you’ll quickly set up a maintainable and scalable publishing workflow, freeing you to focus on writing. We’ll walk through preparing your vault, configuring GitHub Actions to automatically build and deploy your Quartz website, and extending this to easily updating multiple sites from within a single vault.\nWith that out of the way, let’s dive into the CI/CD basics that power this workflow.\nWhat is CI/CD? Continuous Integration (CI) is a software development practice in which developers regularly push code changes to a repository, triggering automated builds and tests. This approach keeps the codebase up to date and surfaces potential problems early. Automating the process of copying notes from your vault to the Quartz repository, filtering out unwanted directories, validating essential files, and building the website reduces what could become an hour-long chore to mere seconds.\nContinuous Deployment (CD) is a software delivery strategy where code changes that have passed integration are automatically released to production. Every step of the delivery process after your commit is handled by automated tools and scripts, with no need for manual intervention. That means from the moment you push your updated notes to your repository, the transformation from plain Markdown to a published website happens quickly and effortlessly.\nPut together, embracing a CI/CD workflow to publishing your vault means you can spend your valuable time and energy working on your notes rather than the repetitive and time consuming tasks of testing, building, and deployment.\nPreparing your Obsidian Vault The first step is to set up your content folder. This can be the root folder of your vault if you intend to publish most/all of your notes, or it can be any folder in your vault. You will need to create a file named index.md in the folder you’d like to publish to serve as the homepage of your website.\nBy default, each page of your Quartz site will display the name of the file as its title. You can optionally set the yaml property ’title’ to display a page title different than the file name, such as I’ve done here for my homepage.\n![[Example-Vault.png]]\nThe next step is to create a GitHub repository with the contents of your Obsidian vault. If you have one already, that’s great - you won’t need to make a new one. This repo can be either public or private, that’s entirely up to you. Your website will be hosted in a separate repository and the CI/CD workflow we’ll be building will allow you to selectively choose which folders in your vault get published, allowing you to maintain complete control over what is public and what is private. Once you’re done setting up your Obsidian vault repository, you’re to create your Quartz repo.\nSetting up the Quartz Static Site Because this tutorial is specifically focused on basic CI/CD principles for beginners, we won’t be building a Quartz …","date":1750796175,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1750796175,"objectID":"2edbb369b8619230f91b3aa393accc8e","permalink":"//localhost:1313/post/01---effortless-obsidian-to-quartz-cicd-for-beginners-with-github-actions/","publishdate":"2025-06-24T15:16:15-05:00","relpermalink":"/post/01---effortless-obsidian-to-quartz-cicd-for-beginners-with-github-actions/","section":"post","summary":"Table of Contents [[#Introduction]] [[#What is CI/CD?]] [[#Preparing your Obsidian Vault]] [[#Setting up the Quartz Static Site]] [[#Creating the CI/CD Workflow]] [[#Quartz Deploy Workflow]] [[#Setting up a PAT \u0026 Secrets Management]] [[#Push Quartz Content Workflow]] [[#Optional Maintaining Multiple Sites from within a Single Vault]] [[#Conclusion]] Introduction For a few years now I’ve run my life in Obsidian. Everything - including research, project management, TTRPG notes, and this post you’re reading now - lives in my personal Obsidian vault. I recently refactored this “second brain” of mine and begin sharing my notes online as an exercise in “learning in public”.\n","tags":null,"title":"Test","type":"post"}]